{
	"id": "890389be7a614041a5dc7b33d4a3e774",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.6",
	"solcLongVersion": "0.8.6+commit.11564f7e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/datatype.sol": {
				"content": "//SPDX-License-identifer:MIT\r\n\r\npragma solidity 0.8.6;\r\ncontract datatype{\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/datatype.sol": {
				"datatype": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/datatype.sol\":56:79  contract datatype{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/datatype.sol\":56:79  contract datatype{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205ff81bcc1aa95d1875753a50bf48eff6998bc10634ff63e44564c287fb21884864736f6c63430008060033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205ff81bcc1aa95d1875753a50bf48eff6998bc10634ff63e44564c287fb21884864736f6c63430008060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xF8 SHL 0xCC BYTE 0xA9 0x5D XOR PUSH22 0x753A50BF48EFF6998BC10634FF63E44564C287FB2188 0x48 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
							"sourceMap": "56:23:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205ff81bcc1aa95d1875753a50bf48eff6998bc10634ff63e44564c287fb21884864736f6c63430008060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xF8 SHL 0xCC BYTE 0xA9 0x5D XOR PUSH22 0x753A50BF48EFF6998BC10634FF63E44564C287FB2188 0x48 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
							"sourceMap": "56:23:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 79,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 79,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 79,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 79,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 79,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 79,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 79,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 79,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 79,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 79,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 79,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ff81bcc1aa95d1875753a50bf48eff6998bc10634ff63e44564c287fb21884864736f6c63430008060033",
									".code": [
										{
											"begin": 56,
											"end": 79,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 79,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 79,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 79,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 79,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 79,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/datatype.sol\":\"datatype\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/datatype.sol\":{\"keccak256\":\"0x9741c8f1b9a440155e0cca8f8e232de36e1ba507a879d76cd6ec99206f33324e\",\"urls\":[\"bzz-raw://593f5927b3675649efa928ddaeb2521e0a2d8e5a79ea8791249ac36b506acf1c\",\"dweb:/ipfs/QmejDZ5fZR4AHjv8JUgRkM8fEBeAtaHxgiQ918XHaYoWDy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/datatype.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/datatype.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/datatype.sol": {
				"ast": {
					"absolutePath": "contracts/datatype.sol",
					"exportedSymbols": {
						"datatype": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "datatype",
							"nameLocation": "65:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "56:23:0",
							"usedErrors": []
						}
					],
					"src": "32:47:0"
				},
				"id": 0
			}
		}
	}
}