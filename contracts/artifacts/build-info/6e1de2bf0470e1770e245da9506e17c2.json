{
	"id": "6e1de2bf0470e1770e245da9506e17c2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/counter.sol": {
				"content": "//SPDX-Licencse-Identifier:MIT\r\n\r\n//0xE5f2A565Ee0Aa9836B4c80a07C8b32aAd7978e22 --contract address\r\n// if we are not changing the data only reading the data from the blockchain made it view\r\n//view allows you to see the state of the variable having global state.\r\n// but if we reading the data that is not stored in the blockchain decleare it as pure \r\n//msg avriable,block,tx are known as global; variable\r\npragma solidity  ^0.8.3;\r\ncontract Counter\r\n{\r\nint a;\r\nint b;\r\nint c;  //global stae ---count value will be stored in blockchain thats wahy are known as global variable\r\nfunction addition() public \r\n{\r\n    c=a+b;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n    \r\n//unsigned int (0-256 bits)\r\n    //uint8,unit256(256 bits in size);\r\n    //int ,int 256--->\r\n    //address addr=\r\n    // we dont have addr like values in other language \r\n    //bool=false\r\n    //fixed\r\n    //struct\r\n    //string\r\n    //enum\r\n    //byters of arry"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/counter.sol": {
				"Counter": {
					"abi": [
						{
							"inputs": [],
							"name": "addition",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/counter.sol\":433:635  contract Counter\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/counter.sol\":433:635  contract Counter\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xec597128\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/counter.sol\":577:622  function addition() public \r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/counter.sol\":617:618  b */\n      sload(0x01)\n        /* \"contracts/counter.sol\":615:616  a */\n      sload(0x00)\n        /* \"contracts/counter.sol\":615:618  a+b */\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n        /* \"contracts/counter.sol\":613:614  c */\n      0x02\n        /* \"contracts/counter.sol\":613:618  c=a+b */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/counter.sol\":577:622  function addition() public \r... */\n      jump\t// out\n        /* \"#utility.yul\":7:532   */\n    tag_8:\n        /* \"#utility.yul\":46:49   */\n      0x00\n        /* \"#utility.yul\":65:84   */\n      tag_11\n        /* \"#utility.yul\":82:83   */\n      dup3\n        /* \"#utility.yul\":65:84   */\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"#utility.yul\":60:84   */\n      swap2\n      pop\n        /* \"#utility.yul\":98:117   */\n      tag_13\n        /* \"#utility.yul\":115:116   */\n      dup4\n        /* \"#utility.yul\":98:117   */\n      tag_12\n      jump\t// in\n    tag_13:\n        /* \"#utility.yul\":93:117   */\n      swap3\n      pop\n        /* \"#utility.yul\":286:287   */\n      dup2\n        /* \"#utility.yul\":218:284   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":214:288   */\n      sub\n        /* \"#utility.yul\":211:212   */\n      dup4\n        /* \"#utility.yul\":207:289   */\n      sgt\n        /* \"#utility.yul\":202:203   */\n      0x00\n        /* \"#utility.yul\":199:200   */\n      dup4\n        /* \"#utility.yul\":195:204   */\n      slt\n        /* \"#utility.yul\":188:205   */\n      iszero\n        /* \"#utility.yul\":184:290   */\n      and\n        /* \"#utility.yul\":181:313   */\n      iszero\n      tag_14\n      jumpi\n        /* \"#utility.yul\":293:311   */\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":181:313   */\n    tag_14:\n        /* \"#utility.yul\":473:474   */\n      dup2\n        /* \"#utility.yul\":405:471   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":401:475   */\n      sub\n        /* \"#utility.yul\":398:399   */\n      dup4\n        /* \"#utility.yul\":394:476   */\n      slt\n        /* \"#utility.yul\":390:391   */\n      0x00\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":383:392   */\n      slt\n        /* \"#utility.yul\":379:477   */\n      and\n        /* \"#utility.yul\":376:500   */\n      iszero\n      tag_17\n      jumpi\n        /* \"#utility.yul\":480:498   */\n      tag_18\n      tag_16\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":376:500   */\n    tag_17:\n        /* \"#utility.yul\":524:525   */\n      dup3\n        /* \"#utility.yul\":521:522   */\n      dup3\n        /* \"#utility.yul\":517:526   */\n      add\n        /* \"#utility.yul\":510:526   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":538:614   */\n    tag_12:\n        /* \"#utility.yul\":574:581   */\n      0x00\n        /* \"#utility.yul\":603:608   */\n      dup2\n        /* \"#utility.yul\":592:608   */\n      swap1\n      pop\n        /* \"#utility.yul\":538:614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":620:800   */\n    tag_16:\n        /* \"#utility.yul\":668:745   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":665:666   */\n      0x00\n        /* \"#utility.yul\":658:746   */\n      mstore\n        /* \"#utility.yul\":765:769   */\n      0x11\n        /* \"#utility.yul\":762:763   */\n      0x04\n        /* \"#utility.yul\":755:770   */\n      mstore\n        /* \"#utility.yul\":789:793   */\n      0x24\n        /* \"#utility.yul\":786:787   */\n      0x00\n        /* \"#utility.yul\":779:794   */\n      revert\n\n    auxdata: 0xa26469706673582212200eb26f33a2fc83d9f7efe6ab4b963254505417af5198409f973995211bde9df464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610155806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ec59712814610030575b600080fd5b61003861003a565b005b60015460005461004a9190610052565b600281905550565b600061005d826100e6565b9150610068836100e6565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156100a3576100a26100f0565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156100db576100da6100f0565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212200eb26f33a2fc83d9f7efe6ab4b963254505417af5198409f973995211bde9df464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEC597128 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x52 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D DUP3 PUSH2 0xE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x68 DUP4 PUSH2 0xE6 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0xF0 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0xDB JUMPI PUSH2 0xDA PUSH2 0xF0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xB2 PUSH16 0x33A2FC83D9F7EFE6AB4B963254505417 0xAF MLOAD SWAP9 BLOCKHASH SWAP16 SWAP8 CODECOPY SWAP6 0x21 SHL 0xDE SWAP14 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "433:202:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addition_17": {
									"entryPoint": 58,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_int256": {
									"entryPoint": 82,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:803:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "50:482:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "60:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "82:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "65:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "65:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "60:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "93:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "115:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "98:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "98:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "93:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "293:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "199:1:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "202:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "195:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "195:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "188:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "188:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "211:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "218:66:1",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "286:1:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "214:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "214:74:1"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "207:82:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "184:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "184:106:1"
															},
															"nodeType": "YulIf",
															"src": "181:132:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "478:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "480:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "480:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "387:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "383:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "398:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "405:66:1",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "473:1:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "401:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "401:74:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "394:82:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "379:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "379:98:1"
															},
															"nodeType": "YulIf",
															"src": "376:124:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "510:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "521:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "517:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "517:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "37:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "40:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "46:3:1",
														"type": ""
													}
												],
												"src": "7:525:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "582:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "592:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "603:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "592:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "564:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "574:7:1",
														"type": ""
													}
												],
												"src": "538:76:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "665:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "668:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "658:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "762:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "765:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "786:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "789:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "779:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "779:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "779:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "620:180:1"
											}
										]
									},
									"contents": "{\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x >= 0 and y > (maxValue - x)\n        if and(iszero(slt(x, 0)), sgt(y, sub(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        // underflow, if x < 0 and y < (minValue - x)\n        if and(slt(x, 0), slt(y, sub(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ec59712814610030575b600080fd5b61003861003a565b005b60015460005461004a9190610052565b600281905550565b600061005d826100e6565b9150610068836100e6565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156100a3576100a26100f0565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156100db576100da6100f0565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212200eb26f33a2fc83d9f7efe6ab4b963254505417af5198409f973995211bde9df464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEC597128 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x52 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D DUP3 PUSH2 0xE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x68 DUP4 PUSH2 0xE6 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0xF0 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0xDB JUMPI PUSH2 0xDA PUSH2 0xF0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xB2 PUSH16 0x33A2FC83D9F7EFE6AB4B963254505417 0xAF MLOAD SWAP9 BLOCKHASH SWAP16 SWAP8 CODECOPY SWAP6 0x21 SHL 0xDE SWAP14 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "433:202:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:45;;;:::i;:::-;;;617:1;;615;;:3;;;;:::i;:::-;613:1;:5;;;;577:45::o;7:525:1:-;46:3;65:19;82:1;65:19;:::i;:::-;60:24;;98:19;115:1;98:19;:::i;:::-;93:24;;286:1;218:66;214:74;211:1;207:82;202:1;199;195:9;188:17;184:106;181:132;;;293:18;;:::i;:::-;181:132;473:1;405:66;401:74;398:1;394:82;390:1;387;383:9;379:98;376:124;;;480:18;;:::i;:::-;376:124;524:1;521;517:9;510:16;;7:525;;;;:::o;538:76::-;574:7;603:5;592:16;;538:76;;;:::o;620:180::-;668:77;665:1;658:88;765:4;762:1;755:15;789:4;786:1;779:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "68200",
								"executionCost": "117",
								"totalCost": "68317"
							},
							"external": {
								"addition()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 433,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 433,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 433,
									"end": 635,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 433,
									"end": 635,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 433,
									"end": 635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 433,
									"end": 635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 433,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 635,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 433,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 635,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200eb26f33a2fc83d9f7efe6ab4b963254505417af5198409f973995211bde9df464736f6c63430008070033",
									".code": [
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "EC597128"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 577,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 577,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 577,
											"end": 622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 622,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 577,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 617,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 617,
											"end": 618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 615,
											"end": 618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 615,
											"end": 618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 615,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 618,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 622,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 46,
											"end": 49,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 84,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 82,
											"end": 83,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 65,
											"end": 84,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 65,
											"end": 84,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 65,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 65,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 60,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 60,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 98,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 115,
											"end": 116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 98,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 98,
											"end": 117,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 98,
											"end": 117,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 98,
											"end": 117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 93,
											"end": 117,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 93,
											"end": 117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 284,
											"name": "PUSH",
											"source": 1,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 288,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 211,
											"end": 212,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 207,
											"end": 289,
											"name": "SGT",
											"source": 1
										},
										{
											"begin": 202,
											"end": 203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 200,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 195,
											"end": 204,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 188,
											"end": 205,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 184,
											"end": 290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 181,
											"end": 313,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 181,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 181,
											"end": 313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 293,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 293,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 293,
											"end": 311,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 293,
											"end": 311,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 293,
											"end": 311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 181,
											"end": 313,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 181,
											"end": 313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 473,
											"end": 474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 405,
											"end": 471,
											"name": "PUSH",
											"source": 1,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 401,
											"end": 475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 394,
											"end": 476,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 390,
											"end": 391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 383,
											"end": 392,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 379,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 376,
											"end": 500,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 376,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 376,
											"end": 500,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 480,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 480,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 480,
											"end": 498,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 480,
											"end": 498,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 480,
											"end": 498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 500,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 376,
											"end": 500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 521,
											"end": 522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 517,
											"end": 526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 510,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 510,
											"end": 526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 532,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 532,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 538,
											"end": 614,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 538,
											"end": 614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 592,
											"end": 608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 538,
											"end": 614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 538,
											"end": 614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 538,
											"end": 614,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 620,
											"end": 800,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 620,
											"end": 800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 665,
											"end": 666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 765,
											"end": 769,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 762,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 755,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 789,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 786,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 794,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addition()": "ec597128"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/counter.sol\":\"Counter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/counter.sol\":{\"keccak256\":\"0xc948a4335958526f2acff555c5c3a6f369653a1b053ece06078901d15fcaf21d\",\"urls\":[\"bzz-raw://f4cbb4e0b1125dd36b8c813e53b46fac6df4560b32d9559712558231133b772e\",\"dweb:/ipfs/QmanRDm4XkYpoda1vSWVs3Jv9d9T82HzwAmEAgYAs3EfCr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/counter.sol:Counter",
								"label": "a",
								"offset": 0,
								"slot": "0",
								"type": "t_int256"
							},
							{
								"astId": 5,
								"contract": "contracts/counter.sol:Counter",
								"label": "b",
								"offset": 0,
								"slot": "1",
								"type": "t_int256"
							},
							{
								"astId": 7,
								"contract": "contracts/counter.sol:Counter",
								"label": "c",
								"offset": 0,
								"slot": "2",
								"type": "t_int256"
							}
						],
						"types": {
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/counter.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/counter.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/counter.sol": {
				"ast": {
					"absolutePath": "contracts/counter.sol",
					"exportedSymbols": {
						"Counter": [
							18
						]
					},
					"id": 19,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "407:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "Counter",
							"nameLocation": "442:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "458:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 18,
									"src": "454:5:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "454:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "466:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 18,
									"src": "462:5:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 4,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "462:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "c",
									"nameLocation": "474:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 18,
									"src": "470:5:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 6,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "470:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "606:16:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "613:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 11,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "615:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 12,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "617:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "615:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "613:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "613:5:0"
											}
										]
									},
									"functionSelector": "ec597128",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addition",
									"nameLocation": "586:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:0:0"
									},
									"scope": 18,
									"src": "577:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 19,
							"src": "433:202:0",
							"usedErrors": []
						}
					],
					"src": "407:498:0"
				},
				"id": 0
			}
		}
	}
}