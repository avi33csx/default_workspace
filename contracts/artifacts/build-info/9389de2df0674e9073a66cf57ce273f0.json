{
	"id": "9389de2df0674e9073a66cf57ce273f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/counter.sol": {
				"content": "//SPDX-Licencse-Identifier:MIT\r\n\r\n//0xE5f2A565Ee0Aa9836B4c80a07C8b32aAd7978e22 --contract address\r\n// if we are not changing the data only reading the data from the blockchain made it view\r\n//view allows you to see the state of the variable having global state.\r\n// but if we reading the data that is not stored in the blockchain decleare it as pure \r\n//msg avriable,block,tx are known as global; variable\r\npragma solidity  ^0.8.3;\r\ncontract Counter\r\n{\r\nint a;\r\nint b;  //global stae ---count value will be stored in blockchain thats wahy are known as global variable\r\nfunction addition() public \r\n{\r\n    int c;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n    \r\n//unsigned int (0-256 bits)\r\n    //uint8,unit256(256 bits in size);\r\n    //int ,int 256--->\r\n    //address addr=\r\n    // we dont have addr like values in other language \r\n    //bool=false\r\n    //fixed\r\n    //struct\r\n    //string\r\n    //enum\r\n    //byters of arry"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/counter.sol": {
				"Counter": {
					"abi": [
						{
							"inputs": [],
							"name": "addition",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/counter.sol\":433:627  contract Counter\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/counter.sol\":433:627  contract Counter\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xec597128\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/counter.sol\":569:614  function addition() public \r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220559d6c87818851d295cb5fd6a564da27bda624f0c40790cd2d0c36a21b4f542e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50606d80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063ec59712814602d575b600080fd5b60336035565b005b56fea2646970667358221220559d6c87818851d295cb5fd6a564da27bda624f0c40790cd2d0c36a21b4f542e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6D DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEC597128 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE SWAP14 PUSH13 0x87818851D295CB5FD6A564DA27 0xBD 0xA6 0x24 CREATE 0xC4 SMOD SWAP1 0xCD 0x2D 0xC CALLDATASIZE LOG2 SHL 0x4F SLOAD 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "433:194:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addition_12": {
									"entryPoint": 53,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063ec59712814602d575b600080fd5b60336035565b005b56fea2646970667358221220559d6c87818851d295cb5fd6a564da27bda624f0c40790cd2d0c36a21b4f542e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEC597128 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE SWAP14 PUSH13 0x87818851D295CB5FD6A564DA27 0xBD 0xA6 0x24 CREATE 0xC4 SMOD SWAP1 0xCD 0x2D 0xC CALLDATASIZE LOG2 SHL 0x4F SLOAD 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "433:194:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;569:45;;;:::i;:::-;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "21800",
								"executionCost": "75",
								"totalCost": "21875"
							},
							"external": {
								"addition()": "122"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 433,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 433,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 433,
									"end": 627,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 433,
									"end": 627,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 627,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 433,
									"end": 627,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 433,
									"end": 627,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 433,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 627,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 433,
									"end": 627,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 627,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220559d6c87818851d295cb5fd6a564da27bda624f0c40790cd2d0c36a21b4f542e64736f6c63430008070033",
									".code": [
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "EC597128"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 627,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 569,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 569,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 569,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 569,
											"end": 614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 569,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 569,
											"end": 614,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 569,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 569,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 569,
											"end": 614,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addition()": "ec597128"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/counter.sol\":\"Counter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/counter.sol\":{\"keccak256\":\"0xd4654eb01807653d8730f876fbba73094a4baf4413d69c14c14c0f0691f882fb\",\"urls\":[\"bzz-raw://f767a644a010ffd7d6fe10582d6d70375c7764ebbbd615d547efed5bbbb7c735\",\"dweb:/ipfs/QmSqUGbT5oKLwB4w6zJpPn9dUqWsWWuU9vZ3TWGtKUGz6Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/counter.sol:Counter",
								"label": "a",
								"offset": 0,
								"slot": "0",
								"type": "t_int256"
							},
							{
								"astId": 5,
								"contract": "contracts/counter.sol:Counter",
								"label": "b",
								"offset": 0,
								"slot": "1",
								"type": "t_int256"
							}
						],
						"types": {
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/counter.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/counter.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/counter.sol:15:5:\n   |\n15 |     int c;\n   |     ^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 610,
					"file": "contracts/counter.sol",
					"start": 605
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/counter.sol:13:1:\n   |\n13 | function addition() public \n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 614,
					"file": "contracts/counter.sol",
					"start": 569
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/counter.sol": {
				"ast": {
					"absolutePath": "contracts/counter.sol",
					"exportedSymbols": {
						"Counter": [
							13
						]
					},
					"id": 14,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "407:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "Counter",
							"nameLocation": "442:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "458:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 13,
									"src": "454:5:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "454:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "466:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 13,
									"src": "462:5:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 4,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "462:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "598:16:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "609:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 11,
														"src": "605:5:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 8,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "605:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 10,
												"nodeType": "VariableDeclarationStatement",
												"src": "605:5:0"
											}
										]
									},
									"functionSelector": "ec597128",
									"id": 12,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addition",
									"nameLocation": "578:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:0:0"
									},
									"scope": 13,
									"src": "569:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 14,
							"src": "433:194:0",
							"usedErrors": []
						}
					],
					"src": "407:490:0"
				},
				"id": 0
			}
		}
	}
}