{
	"id": "adafe6bc519b5495ae60f4539c46a229",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.6",
	"solcLongVersion": "0.8.6+commit.11564f7e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/datatype.sol": {
				"content": "//SPDX-License-identifer:MIT\r\n\r\npragma solidity 0.8.6;\r\ncontract dattype{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/datatype.sol": {
				"dattype": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/datatype.sol\":56:82  contract dattype{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/datatype.sol\":56:82  contract dattype{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ef4ca86bdd27037f735978efb7b16d47cba99e185c239d9c765c61fe2edcc08064736f6c63430008060033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220ef4ca86bdd27037f735978efb7b16d47cba99e185c239d9c765c61fe2edcc08064736f6c63430008060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x4C 0xA8 PUSH12 0xDD27037F735978EFB7B16D47 0xCB 0xA9 SWAP15 XOR 0x5C 0x23 SWAP14 SWAP13 PUSH23 0x5C61FE2EDCC08064736F6C634300080600330000000000 ",
							"sourceMap": "56:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220ef4ca86bdd27037f735978efb7b16d47cba99e185c239d9c765c61fe2edcc08064736f6c63430008060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0x4C 0xA8 PUSH12 0xDD27037F735978EFB7B16D47 0xCB 0xA9 SWAP15 XOR 0x5C 0x23 SWAP14 SWAP13 PUSH23 0x5C61FE2EDCC08064736F6C634300080600330000000000 ",
							"sourceMap": "56:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 82,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 82,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 82,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 82,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 82,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 82,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 82,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 82,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 82,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 82,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 82,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ef4ca86bdd27037f735978efb7b16d47cba99e185c239d9c765c61fe2edcc08064736f6c63430008060033",
									".code": [
										{
											"begin": 56,
											"end": 82,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 82,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 82,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 82,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 82,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 82,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/datatype.sol\":\"dattype\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/datatype.sol\":{\"keccak256\":\"0xc3b15089829e9a001ebffed065890101e1625d8e1ada5c2c4f5358a1e0e28c9c\",\"urls\":[\"bzz-raw://88ac7be034635d5d1b879d71824163e352825f79125e1cc252d0bfa86f79452e\",\"dweb:/ipfs/QmTgDSDrLV61AX3g5Mz1VfDJWBrCHgxMJsPbJVzbvwxC7s\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/datatype.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/datatype.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/datatype.sol": {
				"ast": {
					"absolutePath": "contracts/datatype.sol",
					"exportedSymbols": {
						"dattype": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "dattype",
							"nameLocation": "65:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "56:26:0",
							"usedErrors": []
						}
					],
					"src": "32:50:0"
				},
				"id": 0
			}
		}
	}
}